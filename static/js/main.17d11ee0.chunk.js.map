{"version":3,"sources":["images/profile_pics/Dovid_Baars.png","images/profile_pics/Nicolás_Videla_Guahnon.png","images/profile_pics/Ron_Zehavi.png","images/profile_pics/Sebastian_Kleiner.png","images/profile_pics/Solomiia_Ivychuk.png","images/profile_pics/Yitzchak_Siegel-Bareket.png","images/profile_pics/Serah_Tapia.png","components/HowRoofFarmsWorks.jsx","components/RoofFarmsBenefits.jsx","components/Autocomp.jsx","lib/geocode.js","context/resContext.jsx","components/AddressInput.jsx","components/Response.jsx","components/Map.jsx","components/OurTeam.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","arrow","color","fontSize","subtitle","fontWeight","howtext","lineHeight","HowRoofFarmsWorks","classes","Grid","container","item","lg","id","className","icons","marginTop","marginLeft","texts","padding","RoofFarmsBenefits","Autocomp","value","setValue","style","width","apiKey","process","selectProps","onChange","autoFocus","placeholder","styles","input","provided","option","singleValue","geocodeGenerator","address","a","Geocode","setApiKey","structuredObj","label","fromAddress","result","postObj","latitude","results","geometry","location","longitude","axios","post","res","sqMtr","Math","floor","data","square","resContext","createContext","ResContextProvider","props","useState","setRes","err","setErr","sentRes","setSentRes","Provider","children","theme","root","display","alignItems","textAlign","flex","iconButton","place","AddressInput","context","useContext","handleSubmit","console","log","Paper","component","onSubmit","IconButton","onClick","type","aria-label","disabled","to","Response","history","useHistory","push","CircularProgress","Button","variant","TextField","Map","addressDict","roofs","AddressString","lat","AddLat","lng","AddLng","sqrd_meters","center","zoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","url","Object","keys","map","key","i","Marker","position","Popup","OurTeam","size","round","src","Dovid_Baars","href","icon","faLinkedin","Yitzchak_Siegel","Solomiia_Ivychuk","Nicolás_Videla_Guahnon","Ron_Zehavi","Serah_Tapia","Sebastian_Kleiner","App","myRef","useRef","exact","path","CssBaseline","ref","Fab","margin","top","right","bottom","left","event","preventDefault","window","scrollTo","offsetTop","Boolean","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.17d11ee0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dovid_Baars.1fbdbd1e.png\";","module.exports = __webpack_public_path__ + \"static/media/Nicolás_Videla_Guahnon.923fedcb.png\";","module.exports = __webpack_public_path__ + \"static/media/Ron_Zehavi.b331ada6.png\";","module.exports = __webpack_public_path__ + \"static/media/Sebastian_Kleiner.dc60650e.png\";","module.exports = __webpack_public_path__ + \"static/media/Solomiia_Ivychuk.4c4bdc97.png\";","module.exports = __webpack_public_path__ + \"static/media/Yitzchak_Siegel-Bareket.1c360073.png\";","module.exports = __webpack_public_path__ + \"static/media/Serah_Tapia.975e5d4d.png\";","import React from 'react'\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../css files/HowRoofFarmsWorks.css'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    arrow: {color:'rgb(255, 174, 0)', \r\n            fontSize: '18px'},\r\n    subtitle: {fontSize: '18px',\r\n                fontWeight: 'bold'},\r\n    howtext: {lineHeight: '22px'}\r\n});\r\n\r\nfunction HowRoofFarmsWorks(){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div>\r\n            <Grid container>   \r\n                <Grid item lg={6} id='rf-text'>\r\n                    <h1 id='rf-title'>HOW ROOF FARMS WORKS</h1>\r\n                    <ul id=\"ul-rooffarm\">\r\n                        <li>\r\n                            <span className={classes.subtitle}><DoubleArrowIcon className={classes.arrow}/> Infrastructure</span><br/>\r\n                            <span className={classes.howtext}>Roofs are designed, first and foremost, to protect the buildings below them. Before you put plants on your rooftop, make sure you’re working with a solid roof and that you have permission from the building’s owner, as well as preventing structural damage, evaluating the structure, waterproofing and weight</span>\r\n                        </li><br/>\r\n                        <li>\r\n                            <span className={classes.subtitle}><DoubleArrowIcon className={classes.arrow}/> Location</span><br/>\r\n                            <span className={classes.howtext}>Rooftops are full of funky microclimates. Shadow projections, hot spots, damp zones, and wind all affect which plants will thrive in your new garden. Make a practice of observing how weather events like rainstorms and heat waves affect your roof. Access to water is an important factor to consider, particularly if you’re growing vegetables.</span>\r\n                        </li><br/>\r\n                        <li>\r\n                            <span className={classes.subtitle}><DoubleArrowIcon className={classes.arrow}/> What do you want to grow?</span><br/>\r\n                            <span className={classes.howtext}>You’ll want to choose a growing system based on your plant interests, climate, microclimate, local code, and budget. For example, a commercial grower in a four-season climate with an interest in growing year-round might start with a greenhouse system. Small-scale residential gardeners might want to go with a lower-budget, temporary container garden.</span>\r\n                        </li><br/>\r\n                        <li>\r\n                            <span className={classes.subtitle}><DoubleArrowIcon className={classes.arrow}/> Time to start growing</span><br/>\r\n                            <span className={classes.howtext}>Now you can start to flip through seed catalogues and select crops with the untrammeled optimism particular to gardeners before they’ve faced their first crop failure. All plants will try to grow their roots, stems, and leaves. Because of that, edible leaf crops are a good go-to for starter gardens. Selecting plants with edible flowers and seeds are a good workaround. Herbs suit this parameter particularly well, as their flowers and seeds are often delicious. </span>\r\n                        </li>\r\n                    </ul>\r\n                </Grid>\r\n                <Grid item lg={6} id=\"rf-image\">\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowRoofFarmsWorks","import React from 'react'\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport '../css files/RoofFarmsBenefits.css'\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    icons: {marginTop: '50px', \r\n            marginLeft: '140px',\r\n            fontSize: '60px',\r\n            color: 'rgb(65, 148, 93)'},\r\n    texts: {padding: '20px'}\r\n});\r\n\r\n\r\nfunction RoofFarmsBenefits(){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div id='benefits-wrapper'>\r\n            <h1 id=\"benefits-title\">WHAT ARE THE ROOF FARM BENEFITS</h1>\r\n            <Grid container>\r\n                <Grid item lg={3}>\r\n                    <EmojiObjectsIcon className={classes.icons} id='first-icon'/>\r\n                    <p className={classes.texts}>Enhance the urban landscape (and human well-being). Rooftop farms literally make cities greener. Studies have found that exposure to nature provides an array of psychological benefits.</p>\r\n                </Grid>\r\n                <Grid item lg={3}>\r\n                    <EcoIcon className={classes.icons} id='second-icon'/>\r\n                    <p className={classes.texts}>Make cities more eco-friendly. Bare roofs in cities absorb and then radiate heat. This increases energy usage and contributes to the poor air quality that often plagues big cities. </p>\r\n                </Grid>\r\n                <Grid item lg={3}>\r\n                    <LocalShippingIcon className={classes.icons} id='third-icon'/>\r\n                    <p className={classes.texts}>Reduce of carbon emissions and so environmental impact of food transportation. Allows for produce to be picked at just the right time</p>\r\n                </Grid>\r\n                <Grid item lg={3}>\r\n                    <AssignmentTurnedInIcon className={classes.icons} id='fourth-icon'/>\r\n                    <p className={classes.texts}>Increase the availability of real, healthy food. A completely organic form of farming. This means it often has no pesticides or insecticides.</p>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoofFarmsBenefits","import React from \"react\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\n\r\nconst Autocomp = ({ value, setValue }) => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <GooglePlacesAutocomplete\r\n        apiKey={process.env.REACT_APP_API_KEY}\r\n        selectProps={{\r\n          value,\r\n          onChange: setValue,\r\n          autoFocus: true,\r\n          placeholder: \"Enter Your Address To Get Started\",\r\n          styles: {\r\n            input: (provided) => ({\r\n              ...provided,\r\n              color: \"blue\",\r\n            }),\r\n            option: (provided) => ({\r\n              ...provided,\r\n              color: \"blue\",\r\n            }),\r\n            singleValue: (provided) => ({\r\n              ...provided,\r\n              color: \"blue\",\r\n            }),\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autocomp;\r\n","import Geocode from \"react-geocode\";\r\nimport axios from \"axios\";\r\n\r\nexport const geocodeGenerator = async (address) => {\r\n  Geocode.setApiKey(process.env.REACT_APP_API_KEY);\r\n\r\n  const structuredObj = address.label;\r\n\r\n  try {\r\n    const result = await Geocode.fromAddress(structuredObj);\r\n    const postObj = {\r\n      latitude: result.results[0].geometry.location[\"lat\"],\r\n      longitude: result.results[0].geometry.location[\"lng\"],\r\n    };\r\n    let res = await axios.post(\r\n      \"https://immense-lowlands-41652.herokuapp.com/\",\r\n      postObj\r\n    );\r\n    const sqMtr = Math.floor(res.data.square);\r\n    return sqMtr;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const resContext = createContext();\r\n\r\nconst ResContextProvider = (props) => {\r\n  const [res, setRes] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [sentRes, setSentRes] = useState(false);\r\n\r\n  return (\r\n    <resContext.Provider\r\n      value={{\r\n        res,\r\n        setRes,\r\n        err,\r\n        setErr,\r\n        sentRes,\r\n        setSentRes,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </resContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ResContextProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Autocomp from \"../components/Autocomp\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { geocodeGenerator } from \"../lib/geocode\";\r\nimport FilterVintageTwoToneIcon from \"@material-ui/icons/FilterVintageTwoTone\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css files/AddressInput.css\";\r\nimport { resContext } from \"../context/resContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"4px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    width: \"35vw\",\r\n  },\r\n  input: {\r\n    marginLeft: 10,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  place: { marginTop: \"6px\" },\r\n}));\r\n\r\nconst AddressInput = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n\r\n  const context = useContext(resContext);\r\n\r\n  const handleSubmit = async () => {\r\n    context.setSentRes(true);\r\n    console.log(context.sentRes);\r\n    try {\r\n      const sqMtr = await geocodeGenerator(value);\r\n      context.setRes(sqMtr);\r\n    } catch (err) {\r\n      context.setErr(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"div-wrapper\">\r\n      <div id=\"div-subwrapper\">\r\n        <h1 id=\"address-title\">roofarm</h1>\r\n        <p id=\"address-subtitle\">GROW YOUR OWN FOOD</p>\r\n        <div id=\"paper-wrapper\">\r\n          <Paper\r\n            component=\"form\"\r\n            className={classes.root}\r\n            id=\"paper-responsive\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Autocomp value={value} setValue={setValue} />\r\n\r\n            <IconButton\r\n              onClick={handleSubmit}\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"submit\"\r\n              disabled={!value}\r\n            >\r\n              <Link to=\"/submit\">\r\n                <FilterVintageTwoToneIcon\r\n                  className={classes.place}\r\n                  color=\"secondary\"\r\n                />\r\n              </Link>\r\n            </IconButton>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressInput;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"../css files/Response.css\";\r\nimport { resContext } from \"../context/resContext\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Response() {\r\n  let res = null;\r\n  let err = null;\r\n  let history = useHistory();\r\n  const context = useContext(resContext);\r\n  if (context) {\r\n    res = context.res;\r\n    err = context.err;\r\n    if (!context.sentRes) history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"response-wrapper\">\r\n      {err ? (\r\n        <h1>Oops! Looks like we couldn't process your address</h1>\r\n      ) : res > 0 ? (\r\n        <h1 id=\"response-1-h1\">\r\n          Your roof has {res} sq. meters of prime garden real estate!\r\n        </h1>\r\n      ) : (\r\n        <>\r\n          <h1 id=\"response-2-h1\">\r\n            Thank you for caring! We will be in touch shortly!\r\n          </h1>\r\n          <CircularProgress />\r\n        </>\r\n      )}\r\n      {err ? (\r\n        <h3>Check that your roof is in our service area, and try again!</h3>\r\n      ) : res > 0 ? (\r\n        <h3 id=\"response-1-h3\">\r\n          Your roof can feed {Math.floor(res / 33)} people per year!\r\n        </h3>\r\n      ) : (\r\n        <h3 id=\"response-2-h3\">\r\n          Your request has been successfully submitted and we will get in touch\r\n          with you in next 24-hours\r\n        </h3>\r\n      )}\r\n      <Button variant=\"contained\" color=\"primary\" id=\"response-btn\">\r\n        <Link to=\"/\" id=\"response-link\">\r\n          Back to Home Page\r\n        </Link>\r\n      </Button>\r\n      <p id=\"response-question\">\r\n        Do you want to receive the information via email?\r\n      </p>\r\n      <br />\r\n      <form>\r\n        <TextField\r\n          id=\"response-textfield\"\r\n          label=\"abc@abc.com\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" id=\"response-form-btn\">\r\n          SUBMIT\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Response;\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport roofs from \"../lib/roofs.json\";\r\nimport \"../css files/Map.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Map = () => {\r\n  const addressDict = roofs.AddressString;\r\n  const lat = roofs.AddLat;\r\n  const lng = roofs.AddLng;\r\n  const sqMtr = roofs.sqrd_meters;\r\n  return (\r\n    <div>\r\n      <Grid container id=\"grid-map\">\r\n        <Grid item lg={6}>\r\n          <LeafletMap\r\n            id=\"map\"\r\n            center={[lat[200], lng[200]]}\r\n            zoom={15}\r\n            attributionControl={true}\r\n            zoomControl={true}\r\n            doubleClickZoom={true}\r\n            scrollWheelZoom={true}\r\n            dragging={true}\r\n            animate={true}\r\n            easeLinearity={0.35}\r\n          >\r\n            <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\r\n\r\n            {Object.keys(addressDict).map((key, i) => {\r\n              if (i % 10 === 0) {\r\n                return (\r\n                  <Marker key={key} position={[lat[key], lng[key]]}>\r\n                    <Popup>\r\n                      This roof is perfect for roofarm! it has{\" \"}\r\n                      {Math.floor(sqMtr[key])} square meters of usable space.\r\n                    </Popup>\r\n                  </Marker>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </LeafletMap>\r\n        </Grid>\r\n        <Grid item lg={3}>\r\n          <h2 id=\"text1\">\r\n            The map on the left indicates some of the buldings in Paris where it\r\n            can be installed a roofarm\r\n          </h2>\r\n          <h2 id=\"text2\">\r\n            According to a survey made by Le Monde on 2019, less than 5% of the\r\n            buldings implement it\r\n          </h2>\r\n        </Grid>\r\n        <Grid item lg={3}>\r\n          <h2 id=\"text3\">\r\n            More than 2 million people lives in Paris according to the last\r\n            census and the city counts with over 15 thousands buildings\r\n          </h2>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Dovid_Baars from \"../images/profile_pics/Dovid_Baars.png\";\r\nimport Nicolás_Videla_Guahnon from \"../images/profile_pics/Nicolás_Videla_Guahnon.png\";\r\nimport Ron_Zehavi from \"../images/profile_pics/Ron_Zehavi.png\";\r\nimport Sebastian_Kleiner from \"../images/profile_pics/Sebastian_Kleiner.png\";\r\nimport Solomiia_Ivychuk from \"../images/profile_pics/Solomiia_Ivychuk.png\";\r\nimport Yitzchak_Siegel from \"../images/profile_pics/Yitzchak_Siegel-Bareket.png\";\r\nimport Serah_Tapia from \"../images/profile_pics/Serah_Tapia.png\";\r\nimport \"../css files/OurTeam.css\";\r\n\r\nconst OurTeam = () => {\r\n  return (\r\n    <div className=\"our-team\">\r\n      <h1 className=\"team-header\">Our Team</h1>\r\n      <h3 className=\"team-second\">Full-Stack</h3>\r\n      <div className=\"team-div\">\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Dovid_Baars} />\r\n          <span className=\"link-name\">Dovid Baars</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/dovidbaars/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Yitzchak_Siegel} />\r\n          <span className=\"link-name\">Yitzchak Siegel-Bareket</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/yitzchak-siegel-bareket/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Solomiia_Ivychuk} />\r\n          <span className=\"link-name\">Solomiia Ivychuk</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/solomiia-ivychuk-b30a52188/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Nicolás_Videla_Guahnon} />\r\n          <span className=\"link-name\">Nicolás Videla Guahnon</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/nicolas-videla-27941272/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <h3 className=\"team-second\">Data Science</h3>\r\n      <div className=\"team-div\">\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Ron_Zehavi} />\r\n          <span className=\"link-name\">Ron Zehavi</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/ron-zehavi/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Serah_Tapia} />\r\n          <span className=\"link-name\">Serah Tapia (Abensour)</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/serah-tapia-abensour-b614ab24/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n        <div className=\"profile\">\r\n          <Avatar size={100} round={true} src={Sebastian_Kleiner} />\r\n          <span className=\"link-name\">Sebastian Kleiner</span>\r\n          <a\r\n            className=\"linked-link\"\r\n            href=\"https://www.linkedin.com/in/sebastiankleiner/\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OurTeam;\r\n","import React, { Fragment, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport HowRoofFarmsWorks from \"./components/HowRoofFarmsWorks\";\r\nimport RoofFarmsBenefits from \"./components/RoofFarmsBenefits\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AddressInput from \"./components/AddressInput\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport FilterVintageTwoToneIcon from \"@material-ui/icons/FilterVintageTwoTone\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Response from \"./components/Response\";\r\nimport Map from \"./components/Map\";\r\nimport ResContextProvider from \"./context/resContext\";\r\nimport OurTeam from \"./components/OurTeam\";\r\n\r\nconst App = () => {\r\n  const myRef = useRef();\r\n  const scrollToRef = (ref) => window.scrollTo(0, ref.offsetTop);\r\n\r\n  const handleFabClick = (event) => {\r\n    event.preventDefault();\r\n    scrollToRef(myRef);\r\n  };\r\n\r\n  return (\r\n    <ResContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Fragment>\r\n              <CssBaseline />\r\n              <AddressInput ref={myRef} />\r\n              <RoofFarmsBenefits />\r\n              <HowRoofFarmsWorks />\r\n              <Map />\r\n              <OurTeam />\r\n              <Fab\r\n                style={{\r\n                  margin: 0,\r\n                  top: \"auto\",\r\n                  right: 20,\r\n                  bottom: 20,\r\n                  left: \"auto\",\r\n                  position: \"fixed\",\r\n                }}\r\n                color=\"secondary\"\r\n                aria-label=\"get-started\"\r\n                onClick={handleFabClick}\r\n              >\r\n                <FilterVintageTwoToneIcon />\r\n              </Fab>\r\n            </Fragment>\r\n          </Route>\r\n          <Route path=\"/submit/\">\r\n            <Response />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ResContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}